apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: novo-recurso
  title: Cadastrar Recurso de Infra
  description: Execute para registrar recursos de infraestrutura no catálogo.
spec:
  type: resource
  owner: "group:default/gov-vr"
  parameters:
  - title: Identificação e Governança
    required: [nome, descricao, versao, responsavel, buEcossistema]
    properties:
      nome:
        title: Nome
        type: string
        description: "Entre apenas com letras maiúsculas/minúsculas, números, hífen, underscore e espaço. Sempre começe com uma letra. Não é aceito cedilha, acentuação ou caracteres especiais."
        pattern: '^[a-zA-Z][a-zA-Z0-9-\s]*$'
        errorMessage: 
          pattern: 'Não aceita cedilha, acentos ou caracteres especiais. Somente letras maiúsculas/minúsculas, números, hífen, underscore e espaço. Sempre começe com uma letra.'
      descricao:
        title: Descrição
        description: Descreva em detalhes o recurso a ser utilizado.
        type: string
        ui:widget: textarea
        ui:options:
          rows: 5
        ui:help: "Dica: você pode colar texto multilinha aqui."
        ui:placeholder: |
          
          Digite ou cole aqui o seu texto.
          Múltiplas linhas são suportadas.
      versao:
        title: Versão
        description: Versão inicial do Asset no Catálogo
        type: string
        default: 1.0.0
        pattern: '^\d+\.\d+\.\d+$'
        errorMessage: "Formato de versão inválido. Use o formato X.Y.Z (exemplo: 1.0.0)."
      responsavel:
        title: Time responsável
        description: Time responsável pelo recurso
        type: string
        ui:field: OwnerPicker
        ui:options:
          allowedKinds: [Group]
          allowArbitraryValues: false
      buEcossistema:
        title: BU do Ecossistema
        type: string
        description: Selecione a BU do ecossistema a qual o recurso pertence
        default: vr-beneficios
        enum: [vr-beneficios, vr-gente, vr-mobilidade, vr-shopping, vr-vexpense]
      conformidadesRegulamentacoes:
        title: Conformidade e Regulamentações
        type: array
        items:
          type: string
          enum: [LGPD, PII, ISO9001, ISO25010]
        uniqueItems: true
        ui:widget: checkboxes
  - title: Detalhamento Técnico
    required: [tipoComponente, natureza, tipoExposicaoEModeloAcesso]
    properties:
      tipoComponente:
        title: Tipo de Recurso
        type: string
        description: Categoria macro do recurso
        enum: [Dados, Rede, Storage, Servidor, Segurança, Suporte]
      natureza:
        title: Natureza
        type: string
        description: A natureza do recurso
        enum: [Cloud, On-Premisses]
      cloudProvider:
        title: Provedor Cloud
        type: string
        description: O provedor cloud utilizado
        enum: [AWS, Azure, GCP, IBM]
      tipoExposicaoEModeloAcesso:
        title: Tipo de Exposição e Modelo de Acesso
        type: array
        description: "Selecione as TAGs apropriadas para Modelo de Acesso e Tipo de Exposição."
        items:
          type: string
        minItems: 2
        ui:field: EntityTagsPicker
        ui:options:
          allowArbitraryValues: false
          kinds: [Resource]
  - title: Integração
    required: []
    properties:
      componentesConsumidores:
        title: Componentes Consumidores
        type: array
        description: Serviços, bibliotecas e/ou componentes de Frontend consumidores deste recurso. 
        items:
          type: string
          title: Componente
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind: Component
              spec.type: [Serviço, Biblioteca, Web, Mobile, Externo]
        uniqueItems: true
        errorMessage: "O mesmo item foi selecionado mais de uma vez. Favor selecionar somente um de cada."
      recursosDependentes:
        title: Recursos Dependentes
        type: array
        description: Listagem de recursos (infra) dependentes
        items:
          type: string
          title: Recurso
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind: Resource
        uniqueItems: true
        errorMessage: "O mesmo item foi selecionado mais de uma vez. Favor selecionar somente um de cada."
  - title: Custos
    required: [produtoRelacionado]
    properties:
      produtoRelacionado:
        title: Produto VR Relacionado
        type: string
      centroDeCusto:
        title: Centro de Custo
        type: string
        description: O centro de custo do responsável financeiro
        default: "01234"
        enum: ["01234", "56789", "02025"]
      custo:
        title: Preço estimado
        type: number
        description: O preço do recurso (em reais).
      periodicidade:
        title: Periodicidade
        type: string
        description: A periodicidade que o valor acima será cobrado.
        enum: [por hora, mensal, anual]
  - title: Observabilidade
    required: [monitoramento, urlMonitoramento]
    properties:
      monitoramento:
        title: Monitoramento Principal
        type: string
        description: A ferramenta principal utilizada para monitorar este recurso
        enum: [Nativo-CloudProvider, Dynatrace, Grafana, Zabbix, Prometheus]        
      urlMonitoramento:
        title: URL do Monitoramento
        type: string
        description: O endereço da ferramenta de monitoramento para reste recurso. 
        pattern: '^http|https://[a-z0-9A-Z]*$'
        errorMessage: "Entre com uma URL HTTP/HTTPS"
  - title: Versionamento
    required: [repoUrl]
    properties:
      repoUrl:
        title: Registro em repositório
        type: string
        description: "Utilizado para manter o catalog-info.yaml deste recurso. Obs: o repositório não deve existir. "
        ui:field: RepoUrlPicker
        ui:options:
          allowedHosts: [github.com]
          allowedOwners: [vr-beneficios, vr-gente, vr-mobilidade, vr-shopping, tada-git]
  steps:
    - id: fetch-skeleton
      name: Fetch Skeleton
      action: fetch:template
      input:
        url: ./skeleton
        values:
          nome: ${{ parameters.nome }}
          descricao: ${{ parameters.descricao | replace(r/\r?\n/g, '\n\r') }}
          tipoComponente: ${{ parameters.tipoComponente }}
          responsavel: ${{ parameters.responsavel }}
          versao: ${{ parameters.versao }}
          buEcossistema: ${{ parameters.buEcossistema }}
          conformidadesRegulamentacoes: ${{ parameters.conformidadesRegulamentacoes | default([]) | join(', ') }}
          natureza: ${{ parameters.natureza }}
          cloudProvider: ${{ parameters.cloudProvider | default('n/a') }}
          tipoExposicaoEModeloAcesso: ${{ parameters.tipoExposicaoEModeloAcesso }}
          componentesConsumidores: ${{ parameters.componentesConsumidores }}
          recursosDependentes: ${{ parameters.recursosDependentes }}
          produtoRelacionado: ${{ parameters.produtoRelacionado }}
          centroDeCusto: ${{ parameters.centroDeCusto | default('n/a') }}
          custo: ${{ parameters.custo | default('n/a') }}
          periodicidade: ${{ parameters.periodicidade | default('n/a') }}
          monitoramento: ${{ parameters.monitoramento }}
          urlMonitoramento: ${{ parameters.urlMonitoramento }}
    - id: publish
      name: Publica o repo no github
      action: publish:github
      if: ${{ parameters.repoUrl.includes('github.com') }}
      input:
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main
        gitCommitMessage: 'Initial: Criacao do repositorio e esqueleto do projeto ${{ parameters.nome }}'
        description: 'Initial: Criacao do repositorio e esqueleto do projeto ${{ parameters.nome }}'
    - id: register
      name: Register
      action: catalog:register
      if: ${{ parameters.repoUrl.includes('github.com') }}
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Abrir no catálogo
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
